from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton


async def start_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.row(KeyboardButton(text='–ü—ñ–¥—Ç–≤–µ—Ä–¥—å—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω', request_contact=True))
    return markup


async def quantity_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    markup.row(KeyboardButton(text='+ 30 –¥–Ω—ñ–≤'),
               KeyboardButton(text='- 30 –¥–Ω—ñ–≤'))
    markup.row(KeyboardButton(text='‚úÖ–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏'))
    markup.row(KeyboardButton(text='‚¨Ö–ù–∞–∑–∞–¥'))
    return markup


async def menu_keyboard_halfreg():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    markup.row(KeyboardButton(text='–í—Å—Ç—É–ø–∏—Ç–∏ –¥–æ –∫–ª—É–±—É'))
    markup.row(KeyboardButton(text='–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É –∫–ª—É–±—É'))
    return markup


async def menu_keyboard_regonly():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    markup.row(KeyboardButton(text='–í—Å—Ç—É–ø–∏—Ç–∏ –¥–æ –∫–ª—É–±—É'))
    return markup


async def menu_keyboard_fullreg():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.row(KeyboardButton(text='–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É –∫–ª—É–±—É'))
    markup.row(KeyboardButton(text='–ü–æ–¥–æ–≤–∂–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É –∫–ª—É–±—É'))
    return markup


async def menu_keyboard_admin():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.row(KeyboardButton(text='–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É –∫–ª—É–±—É'))
    markup.row(KeyboardButton(text='–ü–æ–¥–æ–≤–∂–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É –∫–ª—É–±—É'))
    markup.row(KeyboardButton(text='–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–∏–≤–Ω–µ –º–µ–Ω—é'))
    return markup


async def admin_menu_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.row(KeyboardButton(text='‚àë –í–∏—Ç—è–≥ –∑ –±–∞–∑–∏ —Ä–∞—Ö—É–Ω–∫—ñ–≤'))
    markup.row(KeyboardButton(text='üßëüèª –ê–∫—Ç–∏–≤–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ'))
    markup.row(KeyboardButton(text='‚ò∞–ú–µ–Ω—é'))
    return markup


async def menu_keyboard_subsonly():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.row(KeyboardButton(text='–ü–æ–¥–æ–≤–∂–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É –∫–ª—É–±—É'))
    return markup


async def menu_exit_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.row(KeyboardButton(text='‚ò∞–ú–µ–Ω—é'))
    return markup


async def approval_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.row(KeyboardButton(text='‚úÖ–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏'))
    markup.row(KeyboardButton(text='‚¨Ö–ù–∞–∑–∞–¥'))
    return markup


async def back_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.row(KeyboardButton(text='‚¨Ö–ù–∞–∑–∞–¥'))
    return markup


# async def admin_start_keyboard():
#     markup = InlineKeyboardMarkup(row_width=1)
#     markup.row(InlineKeyboardButton(text='–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
#                                     callback_data='admin_panel'))
#     markup.row(InlineKeyboardButton(text='–ú–µ–Ω—é –±–ª—é–¥',
#                                     callback_data='dish_menu'))
#     markup.row(InlineKeyboardButton(text='–ò–Ω—Ñ–æ',
#                                     callback_data='info'))
#     return markup
#
#
# async def admin_panel_keyboard():
#     markup = InlineKeyboardMarkup(row_width=1)
#     markup.row(InlineKeyboardButton(text='–í–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –º–µ–Ω—é',
#                                     callback_data='db_mutation'))
#     markup.row(InlineKeyboardButton(text='–ó–∞—á–∏—Å–ª–∏—Ç—å –æ–ø–ª–∞—Ç—É',
#                                     callback_data='credit_mutation'))
#     markup.row(InlineKeyboardButton(text='‚¨Ö–ù–∞–∑–∞–¥',
#                                     callback_data='cancel'))
#     return markup
#
#
# async def base_change_keyboard(db_dishes):
#     markup = InlineKeyboardMarkup(row_width=1)
#     for dish in db_dishes:
#         text_button = f'{dish.name}: {dish.price} –≥—Ä–Ω.'
#         markup.insert(InlineKeyboardButton(text=text_button, callback_data=f'mutation{dish.name}'))
#     markup.row(InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –±–ª—é–¥–æ –≤ –º–µ–Ω—é', callback_data='new_item'))
#     markup.row(InlineKeyboardButton(text='‚¨Ö–ù–∞–∑–∞–¥', callback_data='cancel'))
#     return markup
#
#
# async def mutation_keyboard():
#     markup = InlineKeyboardMarkup(row_width=1)
#     markup.row(InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', callback_data='name'))
#     markup.row(InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É', callback_data='price'))
#     markup.row(InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å', callback_data='delete'))
#     markup.row(InlineKeyboardButton(text='‚¨Ö–ù–∞–∑–∞–¥', callback_data='cancel'))
#     return markup
#
#
# async def credit_mutation_abc_keyboard(customers: dict):
#     markup = InlineKeyboardMarkup(row_width=2)
#     for l in sorted(list(customers.keys())):
#         markup.insert(InlineKeyboardButton(text=l, callback_data=f'letter{l}'))
#     markup.row(InlineKeyboardButton(text='‚¨Ö–ù–∞–∑–∞–¥', callback_data='cancel'))
#     return markup
#
#
# async def credit_names_keyboard(customers: dict):
#     markup = InlineKeyboardMarkup(row_width=1)
#     for k, v in customers.items():
#         markup.insert(InlineKeyboardButton(text=v.pseudonym, callback_data=f'push{v.pseudonym}'))
#     markup.row(InlineKeyboardButton(text='‚¨Ö–ù–∞–∑–∞–¥', callback_data='cancel'))
#     return markup

async def invoice_keyboard(url, text):
    markup = InlineKeyboardMarkup(row_width=1)
    markup.row(InlineKeyboardButton(text=text, url=url))
    return markup


async def cancel_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.row(KeyboardButton(text='‚¨Ö–ù–∞–∑–∞–¥'))
    return markup

